{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack tutorial\\\\ReactJs\\\\code VD\\\\codeTodoApp\\\\src\\\\components\\\\TodoApp.js\";\nimport React from \"react\";\nimport Header from \"./layout/Header\";\nimport Todos from \"./Todos\";\nimport AddTodo from \"./AddTodo\";\nimport axios from \"axios\";\n\nclass TodoApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.handleCheckBoxChange = id => {\n      // Hàm setState() dùng để thay đổi thuộc tính trong state \n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id == id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.deleteTodo = id => {\n      this.setState({\n        todos: // Method filter giúp xóa các phần tử trong object\n        this.state.todos.filter(todo => {\n          return todo.id !== id;\n        })\n      });\n    };\n\n    this.addTodo = title => {\n      var stateId = this.state.todos.length;\n      stateId++;\n      const newTodo = {\n        id: stateId,\n        title: title,\n        completed: false\n      }; // this.setState({\n      // todos: [...this.state.todos, newTodo]\n      // });\n\n      axios.post(\"http://localhost:3000/todos\").then(response => this.setState({}));\n    };\n\n    this.deleteTodo = id => {\n      axios.delete(`http://localhost:3000/todos/${id}`).then(reponse => this.setState({\n        todos: [...this.state.todos.filter(todo => {\n          return todo.id !== id;\n        })]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    // Đặt ra một giới hạn lượng dữ liệu được lấy từ api \n    const limit = {\n      // phần tên biến trong object limit phải đúng cú pháp \n      params: {\n        _limit: 5\n      }\n    }; // Tạo GET request để lấy ra danh sách todos\n\n    axios.get(\"http://localhost:3000/todos\", limit).then(response => this.setState({\n      todos: response.data\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(AddTodo, {\n      addTodo: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Todos, {\n      todos: this.state.todos,\n      handleChange: this.handleCheckBoxChange,\n      deleteTodo: this.deleteTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["E:/fullstack tutorial/ReactJs/code VD/codeTodoApp/src/components/TodoApp.js"],"names":["React","Header","Todos","AddTodo","axios","TodoApp","Component","state","todos","handleCheckBoxChange","id","setState","map","todo","completed","deleteTodo","filter","addTodo","title","stateId","length","newTodo","post","then","response","delete","reponse","componentDidMount","limit","params","_limit","get","data","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Header from \"./layout/Header\";\r\nimport Todos from \"./Todos\";\r\nimport AddTodo from \"./AddTodo\";\r\nimport axios from \"axios\";\r\nclass TodoApp extends React.Component {\r\n    state = {\r\n        todos: []\r\n    };\r\n    \r\n    handleCheckBoxChange = id => {\r\n        // Hàm setState() dùng để thay đổi thuộc tính trong state \r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n                if(todo.id == id){\r\n                    todo.completed = !todo.completed;\r\n                }\r\n                return todo;\r\n            })\r\n        });\r\n    };\r\n    deleteTodo = id => {\r\n        this.setState({\r\n            todos: \r\n                // Method filter giúp xóa các phần tử trong object\r\n                this.state.todos.filter(todo => {\r\n                    return todo.id !==id;\r\n                })\r\n        })\r\n    };\r\n\r\n    addTodo = title => {\r\n        var stateId = this.state.todos.length;\r\n            stateId++;\r\n        const newTodo = {\r\n            id: stateId,\r\n            title: title,\r\n            completed: false\r\n            };\r\n            // this.setState({\r\n            // todos: [...this.state.todos, newTodo]\r\n            // });\r\n            axios.post(\"http://localhost:3000/todos\")\r\n                .then(response => this.setState({\r\n                    \r\n                }))\r\n    };\r\n    \r\n    componentDidMount() {\r\n        // Đặt ra một giới hạn lượng dữ liệu được lấy từ api \r\n        const limit = {\r\n            // phần tên biến trong object limit phải đúng cú pháp \r\n            params: {\r\n                _limit: 5\r\n            }\r\n        }\r\n        // Tạo GET request để lấy ra danh sách todos\r\n        axios.get(\"http://localhost:3000/todos\", limit)\r\n            .then( response => this.setState({\r\n                todos: response.data\r\n            }) )\r\n    }\r\n    deleteTodo = id => {\r\n        axios.delete(`http://localhost:3000/todos/${id}`)\r\n        .then(reponse => this.setState({\r\n        todos: [\r\n        ...this.state.todos.filter(todo => {\r\n        return todo.id !== id;\r\n        })\r\n        ]\r\n        }))\r\n        };\r\n    \r\n    \r\n    render() {\r\n        return (\r\n        <div className=\"container\">\r\n            <Header />\r\n            <AddTodo addTodo={this.addTodo}/> \r\n            <Todos todos = {this.state.todos} handleChange = {this.handleCheckBoxChange} deleteTodo={this.deleteTodo}/>\r\n        </div>);\r\n    };\r\n}\r\nexport default TodoApp; \r\n\r\n"]},"metadata":{},"sourceType":"module"}