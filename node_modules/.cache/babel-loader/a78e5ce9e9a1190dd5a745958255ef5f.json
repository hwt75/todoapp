{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullstack tutorial\\\\ReactJs\\\\code VD\\\\codeTodoApp\\\\src\\\\components\\\\TodoApp.js\";\nimport React from \"react\";\nimport Header from \"./layout/Header\";\nimport Todos from \"./Todos\";\nimport AddTodo from \"./AddTodo\";\nimport axios from \"axios\";\nimport dataA from \"../modal/data\"; // import React, {useState} from \"react\";\n// function vdHook(){\n//     const respone = \n// }\n\nclass TodoApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.handleCheckBoxChange = id => {\n      // Hàm setState() dùng để thay đổi thuộc tính trong state \n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id == id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.addTodo = title => {\n      const newTodo = {\n        title: title,\n        completed: false\n      }; // this.setState({\n      // todos: [...this.state.todos, newTodo]\n      // });\n\n      axios.post(\"https://jsonplaceholder.typicode.com/todos\", newTodo).then(response => this.setState({\n        todos: [...this.state.todos, response.data]\n      }));\n    };\n\n    this.deleteTodo = id => {\n      axios.delete(`https://jsonplaceholder.typicode.com/todos/$%7bid%7d`).then(reponse => this.setState({\n        todos: [...this.state.todos.filter(todo => {\n          return todo.id !== id;\n        })]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    // Đặt ra một giới hạn lượng dữ liệu được lấy từ api \n    data.init();\n    const limit = {\n      // phần tên biến trong object limit phải đúng cú pháp \n      params: {\n        _limit: 6\n      }\n    }; // Tạo GET request để lấy ra danh sách todos\n\n    axios.get(\"https://jsonplaceholder.typicode.com/todos\", limit).then(response => this.setState({\n      todos: response.data\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(AddTodo, {\n      addTodo: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Todos, {\n      todos: this.state.todos,\n      handleChange: this.handleCheckBoxChange,\n      deleteTodo: this.deleteTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["E:/fullstack tutorial/ReactJs/code VD/codeTodoApp/src/components/TodoApp.js"],"names":["React","Header","Todos","AddTodo","axios","dataA","TodoApp","Component","state","todos","handleCheckBoxChange","id","setState","map","todo","completed","addTodo","title","newTodo","post","then","response","data","deleteTodo","delete","reponse","filter","componentDidMount","init","limit","params","_limit","get","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CACA;AAEA;AACA;AACA;;AACA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACJC,MAAAA,KAAK,EAAE;AADH,KAD0B;;AAAA,SAKlCC,oBALkC,GAKXC,EAAE,IAAI;AACzB;AACA,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,IAAI;AAChC,cAAGA,IAAI,CAACH,EAAL,IAAWA,EAAd,EAAiB;AACbG,YAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACH;;AACD,iBAAOD,IAAP;AACH,SALM;AADG,OAAd;AAQH,KAfiC;;AAAA,SA2BlCE,OA3BkC,GA2BxBC,KAAK,IAAI;AAEf,YAAMC,OAAO,GAAG;AACZD,QAAAA,KAAK,EAAEA,KADK;AAEZF,QAAAA,SAAS,EAAE;AAFC,OAAhB,CAFe,CAMX;AACA;AACA;;AACAX,MAAAA,KAAK,CAACe,IAAN,CAAW,4CAAX,EAAyDD,OAAzD,EACKE,IADL,CACUC,QAAQ,IAAI,KAAKT,QAAL,CAAc;AAC5BH,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBY,QAAQ,CAACC,IAA/B;AADqB,OAAd,CADtB;AAKP,KAzCiC;;AAAA,SA0DlCC,UA1DkC,GA0DrBZ,EAAE,IAAI;AACfP,MAAAA,KAAK,CAACoB,MAAN,CAAc,sDAAd,EACCJ,IADD,CACMK,OAAO,IAAI,KAAKb,QAAL,CAAc;AAC/BH,QAAAA,KAAK,EAAE,CACP,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBiB,MAAjB,CAAwBZ,IAAI,IAAI;AACnC,iBAAOA,IAAI,CAACH,EAAL,KAAYA,EAAnB;AACC,SAFE,CADI;AADwB,OAAd,CADjB;AAQC,KAnE6B;AAAA;;AA2ClCgB,EAAAA,iBAAiB,GAAG;AAChB;AACAL,IAAAA,IAAI,CAACM,IAAL;AACA,UAAMC,KAAK,GAAG;AACV;AACAC,MAAAA,MAAM,EAAE;AACJC,QAAAA,MAAM,EAAE;AADJ;AAFE,KAAd,CAHgB,CAShB;;AACA3B,IAAAA,KAAK,CAAC4B,GAAN,CAAU,4CAAV,EAAwDH,KAAxD,EACKT,IADL,CACWC,QAAQ,IAAI,KAAKT,QAAL,CAAc;AAC7BH,MAAAA,KAAK,EAAEY,QAAQ,CAACC;AADa,KAAd,CADvB;AAIH;;AAYDW,EAAAA,MAAM,GAAG;AACL,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKjB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAI,KAAKR,KAAL,CAAWC,KAA3B;AAAkC,MAAA,YAAY,EAAI,KAAKC,oBAAvD;AAA6E,MAAA,UAAU,EAAE,KAAKa,UAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADA;AAMH;;AA5EiC;;AA8EtC,eAAejB,OAAf","sourcesContent":["import React from \"react\";\r\nimport Header from \"./layout/Header\";\r\nimport Todos from \"./Todos\";\r\nimport AddTodo from \"./AddTodo\";\r\nimport axios from \"axios\";\r\nimport dataA from \"../modal/data\";\r\n// import React, {useState} from \"react\";\r\n\r\n// function vdHook(){\r\n//     const respone = \r\n// }\r\nclass TodoApp extends React.Component {\r\n    state = {\r\n        todos: []\r\n    };\r\n    \r\n    handleCheckBoxChange = id => {\r\n        // Hàm setState() dùng để thay đổi thuộc tính trong state \r\n        this.setState({\r\n            todos: this.state.todos.map(todo => {\r\n                if(todo.id == id){\r\n                    todo.completed = !todo.completed;\r\n                }\r\n                return todo;\r\n            })\r\n        });\r\n    };\r\n    // deleteTodo = id => {\r\n    //     this.setState({\r\n    //         todos: \r\n    //             // Method filter giúp xóa các phần tử trong object\r\n    //             this.state.todos.filter(todo => {\r\n    //                 return todo.id !==id;\r\n    //             }) \r\n    \r\n    //     })\r\n    // };\r\n\r\n    addTodo = title => {\r\n      \r\n        const newTodo = {\r\n            title: title,\r\n            completed: false\r\n            };\r\n            // this.setState({\r\n            // todos: [...this.state.todos, newTodo]\r\n            // });\r\n            axios.post(\"https://jsonplaceholder.typicode.com/todos\", newTodo)\r\n                .then(response => this.setState({\r\n                    todos: [...this.state.todos, response.data]\r\n                })\r\n                )\r\n    };\r\n    \r\n    componentDidMount() {\r\n        // Đặt ra một giới hạn lượng dữ liệu được lấy từ api \r\n        data.init();\r\n        const limit = {\r\n            // phần tên biến trong object limit phải đúng cú pháp \r\n            params: {\r\n                _limit: 6\r\n            }\r\n        }\r\n        // Tạo GET request để lấy ra danh sách todos\r\n        axios.get(\"https://jsonplaceholder.typicode.com/todos\", limit)\r\n            .then( response => this.setState({\r\n                todos: response.data\r\n            }) )\r\n    }\r\n    deleteTodo = id => {\r\n        axios.delete(`https://jsonplaceholder.typicode.com/todos/$%7bid%7d`)\r\n        .then(reponse => this.setState({\r\n        todos: [\r\n        ...this.state.todos.filter(todo => {\r\n        return todo.id !== id;\r\n        })\r\n        ]\r\n        }))\r\n        };\r\n    \r\n    render() {\r\n        return (\r\n        <div className=\"container\">\r\n            <Header />\r\n            <AddTodo addTodo={this.addTodo}/> \r\n            <Todos todos = {this.state.todos} handleChange = {this.handleCheckBoxChange} deleteTodo={this.deleteTodo}/>\r\n        </div>);\r\n    };\r\n}\r\nexport default TodoApp; \r\n\r\n"]},"metadata":{},"sourceType":"module"}